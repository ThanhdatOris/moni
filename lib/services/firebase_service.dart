import 'package:firebase_core/firebase_core.dart';
import 'package:logger/logger.dart';

import '../firebase_options.dart';
import 'app_check_service.dart';
import 'environment_service.dart';

/// Service kh·ªüi t·∫°o v√† c·∫•u h√¨nh Firebase
class FirebaseService {
  static final Logger _logger = Logger();
  static bool _isInitialized = false;

  /// Kh·ªüi t·∫°o Firebase
  static Future<void> initialize() async {
    try {
      if (_isInitialized) {
        // ‚úÖ IMPROVED: Only log if already initialized when needed
        if (EnvironmentService.debugMode) {
          _logger.d('üî• Firebase ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o');
        }
        return;
      }

      // Kh·ªüi t·∫°o Environment Service tr∆∞·ªõc
      await EnvironmentService.initialize();

      if (!EnvironmentService.isInitialized) {
        _logger.w('‚ö†Ô∏è Kh·ªüi t·∫°o Environment Service kh√¥ng th√†nh c√¥ng, s·ª≠ d·ª•ng fallback');
      } else {
        // ‚úÖ IMPROVED: Consolidated environment status - logConfiguration already optimized
        if (EnvironmentService.loggingEnabled) {
          EnvironmentService.logConfiguration();
        }
      }

      // Ki·ªÉm tra xem Firebase ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o ch∆∞a
      if (Firebase.apps.isNotEmpty) {
        // ‚úÖ IMPROVED: Combined with initialization success message below
        _isInitialized = true;
        _logger.i('üî• Firebase: App ƒë√£ t·ªìn t·∫°i, s·ª≠ d·ª•ng instance c√≥ s·∫µn');
        return;
      }

      // Ki·ªÉm tra Firebase configuration
      if (EnvironmentService.firebaseProjectId.isEmpty ||
          EnvironmentService.firebaseProjectId == 'your-project-id') {
        throw Exception(
            'Firebase configuration ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p. Vui l√≤ng t·∫°o file .env v·ªõi th√¥ng tin Firebase ƒë√∫ng.');
      }

      // Kh·ªüi t·∫°o Firebase Core
      await Firebase.initializeApp(
        options: DefaultFirebaseOptions.currentPlatform,
      );

      // Kh·ªüi t·∫°o Firebase App Check
      await AppCheckService.initialize();

      _isInitialized = true;
      // ‚úÖ IMPROVED: Single comprehensive success message
      _logger.i('üî• Kh·ªüi t·∫°o Firebase th√†nh c√¥ng');
    } catch (e) {
      _logger.e('‚ùå L·ªói kh·ªüi t·∫°o Firebase: $e');

      // N·∫øu l·ªói l√† duplicate app, v·∫´n coi nh∆∞ ƒë√£ kh·ªüi t·∫°o th√†nh c√¥ng
      if (e.toString().contains('duplicate-app')) {
        _isInitialized = true;
        _logger.i('üî• Firebase: App ƒë√£ t·ªìn t·∫°i, ti·∫øp t·ª•c s·ª≠ d·ª•ng');
        return;
      }

      // N·∫øu l·ªói configuration, n√©m exception c·ª• th·ªÉ
      if (e.toString().contains('configuration') ||
          e.toString().contains('your-project-id')) {
        throw Exception(
            'Firebase configuration kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra file .env');
      }

      throw Exception('Kh√¥ng th·ªÉ kh·ªüi t·∫°o Firebase: $e');
    }
  }

  /// Ki·ªÉm tra Firebase ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o ch∆∞a
  static bool get isInitialized => _isInitialized;
}
